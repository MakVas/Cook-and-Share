Index: app/src/main/java/com/cook_and_share/presentation/ui/screens/splash/splash/SplashViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/cook_and_share/presentation/ui/screens/splash/splash/SplashViewModel.kt b/app/src/main/java/com/cook_and_share/presentation/ui/screens/splash/SplashViewModel.kt
rename from app/src/main/java/com/cook_and_share/presentation/ui/screens/splash/splash/SplashViewModel.kt
rename to app/src/main/java/com/cook_and_share/presentation/ui/screens/splash/SplashViewModel.kt
--- a/app/src/main/java/com/cook_and_share/presentation/ui/screens/splash/splash/SplashViewModel.kt	(revision 4f008986f0d020bad036d3573cb47eec8e2c99ec)
+++ b/app/src/main/java/com/cook_and_share/presentation/ui/screens/splash/SplashViewModel.kt	(date 1713663836262)
@@ -1,11 +1,10 @@
-package com.cook_and_share.presentation.ui.screens.splash.splash
+package com.cook_and_share.presentation.ui.screens.splash
 
 import androidx.compose.runtime.mutableStateOf
 import com.cook_and_share.domain.repository.AuthRepository
 import com.cook_and_share.domain.repository.LogRepository
+import com.cook_and_share.presentation.navigation.NavGraphs
 import com.cook_and_share.presentation.ui.screens.CookAndShareViewModel
-import com.cook_and_share.presentation.util.NavGraphs
-import com.cook_and_share.presentation.util.Screens
 import dagger.hilt.android.lifecycle.HiltViewModel
 import javax.inject.Inject
 
@@ -19,7 +18,7 @@
 
     fun onAppStart(openAndPopUp: (String, String) -> Unit) {
         showError.value = false
-        if (authRepository.hasUser) openAndPopUp(NavGraphs.Main.route, Screens.SplashScreen.route)
-        else openAndPopUp(NavGraphs.Auth.route, Screens.SplashScreen.route)
+        if (authRepository.hasUser) openAndPopUp(NavGraphs.Main.route, NavGraphs.SplashScreen.route)
+        else openAndPopUp(NavGraphs.Login.route, NavGraphs.SplashScreen.route)
     }
 }
\ No newline at end of file
Index: app/src/main/java/com/cook_and_share/presentation/ui/screens/splash/entry/EntryViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/cook_and_share/presentation/ui/screens/splash/entry/EntryViewModel.kt b/app/src/main/java/com/cook_and_share/presentation/ui/screens/login/entry/EntryViewModel.kt
rename from app/src/main/java/com/cook_and_share/presentation/ui/screens/splash/entry/EntryViewModel.kt
rename to app/src/main/java/com/cook_and_share/presentation/ui/screens/login/entry/EntryViewModel.kt
--- a/app/src/main/java/com/cook_and_share/presentation/ui/screens/splash/entry/EntryViewModel.kt	(revision 4f008986f0d020bad036d3573cb47eec8e2c99ec)
+++ b/app/src/main/java/com/cook_and_share/presentation/ui/screens/login/entry/EntryViewModel.kt	(date 1713666004076)
@@ -1,8 +1,9 @@
-package com.cook_and_share.presentation.ui.screens.splash.entry
+package com.cook_and_share.presentation.ui.screens.login.entry
 
 import com.cook_and_share.domain.repository.LogRepository
+import com.cook_and_share.presentation.navigation.NavGraphs
 import com.cook_and_share.presentation.ui.screens.CookAndShareViewModel
-import com.cook_and_share.presentation.util.Screens
+import com.cook_and_share.presentation.util.Login
 import dagger.hilt.android.lifecycle.HiltViewModel
 import javax.inject.Inject
 
@@ -11,9 +12,9 @@
     logRepository: LogRepository
 ): CookAndShareViewModel(logRepository){
     fun onGetStartedClick(navigate: (String) -> Unit) {
-        navigate(Screens.GetStarted.route)
+        navigate(NavGraphs.GetStarted.route)
     }
     fun onLoginClick(openAndPopUp: (String, String) -> Unit) {
-        openAndPopUp(Screens.LoginScreen.route, Screens.EntryScreen.route)
+        openAndPopUp(NavGraphs.Login.route, Login.EntryScreen.route)
     }
 }
\ No newline at end of file
Index: app/src/main/java/com/cook_and_share/presentation/ui/screens/auth/AuthNavGraph.kt
===================================================================
diff --git a/app/src/main/java/com/cook_and_share/presentation/ui/screens/auth/AuthNavGraph.kt b/app/src/main/java/com/cook_and_share/presentation/ui/screens/auth/AuthNavGraph.kt
deleted file mode 100644
--- a/app/src/main/java/com/cook_and_share/presentation/ui/screens/auth/AuthNavGraph.kt	(revision 4f008986f0d020bad036d3573cb47eec8e2c99ec)
+++ /dev/null	(revision 4f008986f0d020bad036d3573cb47eec8e2c99ec)
@@ -1,50 +0,0 @@
-package com.cook_and_share.presentation.ui.screens.auth
-
-import androidx.navigation.NavGraphBuilder
-import androidx.navigation.compose.composable
-import androidx.navigation.navigation
-import com.cook_and_share.presentation.CookAndShareState
-import com.cook_and_share.presentation.ui.screens.auth.login.LoginScreen
-import com.cook_and_share.presentation.ui.screens.auth.sign_up.get_started.GetStartedScreen
-import com.cook_and_share.presentation.ui.screens.auth.sign_up.sign_up.SignUpScreen
-import com.cook_and_share.presentation.ui.screens.splash.entry.EntryScreen
-import com.cook_and_share.presentation.util.NavGraphs
-import com.cook_and_share.presentation.util.Screens
-
-fun NavGraphBuilder.authGraph(appState: CookAndShareState) {
-    navigation(
-        route = NavGraphs.Auth.route,
-        startDestination = Screens.EntryScreen.route
-    ) {
-
-        composable(route = Screens.EntryScreen.route) {
-            EntryScreen(
-                navigate = { route -> appState.navigate(route) },
-                openAndPopUp = { route, popUp -> appState.navigateAndPopUp(route, popUp) }
-            )
-        }
-
-        composable(route = Screens.GetStarted.route) {
-            GetStartedScreen(
-                popUp = { appState.popUp() },
-                openAndPopUp = { route, popUp -> appState.navigateAndPopUp(route, popUp) }
-            )
-        }
-
-        composable(route = Screens.LoginScreen.route) {
-            LoginScreen(
-                openAndPopUp = { route, popUp -> appState.navigateAndPopUp(route, popUp) }
-            )
-        }
-
-        composable(route = Screens.SignUpScreen.route) {
-            SignUpScreen(
-                openAndPopUp = { route, popUp -> appState.navigateAndPopUp(route, popUp) }
-            )
-        }
-
-        composable(route = Screens.ForgotPassScreen.route) {
-            ForgotPassScreen()
-        }
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/cook_and_share/presentation/CookAndShareNavGraph.kt
===================================================================
diff --git a/app/src/main/java/com/cook_and_share/presentation/CookAndShareNavGraph.kt b/app/src/main/java/com/cook_and_share/presentation/CookAndShareNavGraph.kt
deleted file mode 100644
--- a/app/src/main/java/com/cook_and_share/presentation/CookAndShareNavGraph.kt	(revision 4f008986f0d020bad036d3573cb47eec8e2c99ec)
+++ /dev/null	(revision 4f008986f0d020bad036d3573cb47eec8e2c99ec)
@@ -1,37 +0,0 @@
-package com.cook_and_share.presentation
-
-import androidx.navigation.NavGraphBuilder
-import androidx.navigation.compose.composable
-import androidx.navigation.navigation
-import com.cook_and_share.presentation.ui.screens.main.profile.info.InfoScreen
-import com.cook_and_share.presentation.ui.screens.main.profile.liked.LikedScreen
-import com.cook_and_share.presentation.ui.screens.main.profile.settings.SettingsScreen
-import com.cook_and_share.presentation.ui.screens.splash.splash.SplashScreen
-import com.cook_and_share.presentation.util.NavGraphs
-import com.cook_and_share.presentation.util.Screens
-
-fun NavGraphBuilder.cookAndShareGraph(appState: CookAndShareState) {
-    navigation(
-        route = NavGraphs.CookAndShare.route,
-        startDestination = Screens.SplashScreen.route
-    ) {
-        composable(route = Screens.SplashScreen.route) {
-            SplashScreen(openAndPopUp = { route, popUp -> appState.navigateAndPopUp(route, popUp) })
-        }
-
-        composable(Screens.Settings.route) {
-            SettingsScreen(
-                popUp = { appState.popUp() },
-                restartApp = { route -> appState.clearAndNavigate(route) }
-            )
-        }
-
-        composable(Screens.Info.route) {
-            InfoScreen(popUp = { appState.popUp() })
-        }
-
-        composable(Screens.Liked.route) {
-            LikedScreen(popUp = { appState.popUp() })
-        }
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/cook_and_share/presentation/ui/screens/auth/sign_up/get_started/fragments/PreferencesFragment.kt
===================================================================
diff --git a/app/src/main/java/com/cook_and_share/presentation/ui/screens/auth/sign_up/get_started/fragments/PreferencesFragment.kt b/app/src/main/java/com/cook_and_share/presentation/ui/screens/auth/sign_up/get_started/fragments/PreferencesFragment.kt
deleted file mode 100644
--- a/app/src/main/java/com/cook_and_share/presentation/ui/screens/auth/sign_up/get_started/fragments/PreferencesFragment.kt	(revision 4f008986f0d020bad036d3573cb47eec8e2c99ec)
+++ /dev/null	(revision 4f008986f0d020bad036d3573cb47eec8e2c99ec)
@@ -1,14 +0,0 @@
-package com.cook_and_share.presentation.ui.screens.auth.sign_up.get_started.fragments
-
-import androidx.compose.runtime.Composable
-
-@Composable
-fun PreferencesFragment() {
-
-    PreferencesFragmentContent()
-}
-
-@Composable
-private fun PreferencesFragmentContent() {
-
-}
\ No newline at end of file
Index: app/src/main/java/com/cook_and_share/presentation/ui/screens/auth/sign_up/sign_up/SIgnUpScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/cook_and_share/presentation/ui/screens/auth/sign_up/sign_up/SIgnUpScreen.kt b/app/src/main/java/com/cook_and_share/presentation/ui/screens/get_started/sign_up/SIgnUpScreen.kt
rename from app/src/main/java/com/cook_and_share/presentation/ui/screens/auth/sign_up/sign_up/SIgnUpScreen.kt
rename to app/src/main/java/com/cook_and_share/presentation/ui/screens/get_started/sign_up/SIgnUpScreen.kt
--- a/app/src/main/java/com/cook_and_share/presentation/ui/screens/auth/sign_up/sign_up/SIgnUpScreen.kt	(revision 4f008986f0d020bad036d3573cb47eec8e2c99ec)
+++ b/app/src/main/java/com/cook_and_share/presentation/ui/screens/get_started/sign_up/SIgnUpScreen.kt	(date 1713642027152)
@@ -1,4 +1,4 @@
-package com.cook_and_share.presentation.ui.screens.auth.sign_up.sign_up
+package com.cook_and_share.presentation.ui.screens.get_started.sign_up
 
 import androidx.compose.foundation.clickable
 import androidx.compose.foundation.layout.Arrangement
Index: app/src/main/java/com/cook_and_share/presentation/ui/screens/auth/login/LoginUiState.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/cook_and_share/presentation/ui/screens/auth/login/LoginUiState.kt b/app/src/main/java/com/cook_and_share/presentation/ui/screens/login/login/LoginUiState.kt
rename from app/src/main/java/com/cook_and_share/presentation/ui/screens/auth/login/LoginUiState.kt
rename to app/src/main/java/com/cook_and_share/presentation/ui/screens/login/login/LoginUiState.kt
--- a/app/src/main/java/com/cook_and_share/presentation/ui/screens/auth/login/LoginUiState.kt	(revision 4f008986f0d020bad036d3573cb47eec8e2c99ec)
+++ b/app/src/main/java/com/cook_and_share/presentation/ui/screens/login/login/LoginUiState.kt	(date 1713641900236)
@@ -1,4 +1,4 @@
-package com.cook_and_share.presentation.ui.screens.auth.login
+package com.cook_and_share.presentation.ui.screens.login.login
 
 data class LoginUiState(
     val email: String = "",
Index: app/src/main/res/values-uk/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<resources>\r\n    <string name=\"email\">Електронна пошта</string>\r\n    <string name=\"password\">Пароль</string>\r\n    <string name=\"forgot_password\">Забули пароль?</string>\r\n    <string name=\"login\">Увійти</string>\r\n    <string name=\"dont_have_account\">Бажаєте зареєструватись?</string>\r\n    <string name=\"sign_up\">Реєстрація</string>\r\n    <string name=\"login_with_google\">Продовжити з Google</string>\r\n    <string name=\"login_to_acc\">Увійдіть до свого акаунту</string>\r\n    <string name=\"sign_out\">Вийти</string>\r\n    <string name=\"have_account\">Вже маєте акаунт?</string>\r\n    <string name=\"sign_up_text\">Створіть новий акаунт</string>\r\n    <string name=\"username\">Ім\\'я користувача</string>\r\n    <string name=\"confirm_password\">Підтвердіть пароль</string>\r\n    <string name=\"home\">Головна</string>\r\n    <string name=\"add\">Додати</string>\r\n    <string name=\"search\">Пошук</string>\r\n    <string name=\"settings\">Налаштування</string>\r\n    <string name=\"profile\">Профіль</string>\r\n    <string name=\"top_of_the_day\">Пропозиції дня</string>\r\n    <string name=\"subscribed_recipes\">Відстежувані рецепти</string>\r\n    <string name=\"info\">Довідка</string>\r\n    <string name=\"username_error\">Введіть ім\\'я користувача</string>\r\n    <string name=\"email_error\">Введіть електронну пошту</string>\r\n    <string name=\"password_error\">Ваш пароль має містити принаймні шість символів і містити одну цифру, одну малу та одну велику літеру</string>\r\n    <string name=\"password_match_error\">Паролі не збігаються</string>\r\n    <string name=\"login_failed\">Помилка авторизації</string>\r\n    <string name=\"sign_up_failed\">Помилка реєстрації</string>\r\n    <string name=\"recipe_name\">Назва рецепту</string>\r\n    <string name=\"ingredients\">Інгредієнти</string>\r\n    <string name=\"cooking_method\">Спосіб приготування</string>\r\n    <string name=\"publish_recipe\">Опублікувати рецепт</string>\r\n    <string name=\"categories\">Категорії</string>\r\n    <string name=\"preview\">Попередній перегляд</string>\r\n    <string name=\"search_categories\">Введіть категорію</string>\r\n    <string name=\"popular_categories\">Популярні категорії</string>\r\n    <string name=\"ingredient_name\">Назва інгредієнту</string>\r\n    <string name=\"weight\">Вага</string>\r\n    <string name=\"add_ingredient\">Додати інгредієнт</string>\r\n    <string name=\"recipes\">Рецепти</string>\r\n    <string name=\"people\">Люди</string>\r\n    <string name=\"liked\">Вподобання</string>\r\n    <string name=\"email_letter_sent\">Email letter sent</string>\r\n    <string name=\"unknown_error\">Unknown error</string>\r\n    <string name=\"generic_error\">Generic Error</string>\r\n    <string name=\"try_again\">Try Again</string>\r\n    <string name=\"repeat_password\">Repeat password</string>\r\n    <string name=\"your_recipes\">Your recipes</string>\r\n    <string name=\"get_started\">Get started</string>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values-uk/strings.xml b/app/src/main/res/values-uk/strings.xml
--- a/app/src/main/res/values-uk/strings.xml	(revision 4f008986f0d020bad036d3573cb47eec8e2c99ec)
+++ b/app/src/main/res/values-uk/strings.xml	(date 1713490890064)
@@ -48,4 +48,5 @@
     <string name="repeat_password">Repeat password</string>
     <string name="your_recipes">Your recipes</string>
     <string name="get_started">Get started</string>
+    <string name="continue_text">Continue</string>
 </resources>
\ No newline at end of file
Index: app/src/main/java/com/cook_and_share/presentation/ui/screens/auth/sign_up/sign_up/SignUpUiState.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/cook_and_share/presentation/ui/screens/auth/sign_up/sign_up/SignUpUiState.kt b/app/src/main/java/com/cook_and_share/presentation/ui/screens/get_started/sign_up/SignUpUiState.kt
rename from app/src/main/java/com/cook_and_share/presentation/ui/screens/auth/sign_up/sign_up/SignUpUiState.kt
rename to app/src/main/java/com/cook_and_share/presentation/ui/screens/get_started/sign_up/SignUpUiState.kt
--- a/app/src/main/java/com/cook_and_share/presentation/ui/screens/auth/sign_up/sign_up/SignUpUiState.kt	(revision 4f008986f0d020bad036d3573cb47eec8e2c99ec)
+++ b/app/src/main/java/com/cook_and_share/presentation/ui/screens/get_started/sign_up/SignUpUiState.kt	(date 1713642027163)
@@ -1,4 +1,4 @@
-package com.cook_and_share.presentation.ui.screens.auth.sign_up.sign_up
+package com.cook_and_share.presentation.ui.screens.get_started.sign_up
 
 data class SignUpUiState(
     val username: String = "",
Index: app/src/main/java/com/cook_and_share/presentation/ui/screens/auth/sign_up/sign_up/SignUpViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/cook_and_share/presentation/ui/screens/auth/sign_up/sign_up/SignUpViewModel.kt b/app/src/main/java/com/cook_and_share/presentation/ui/screens/get_started/sign_up/SignUpViewModel.kt
rename from app/src/main/java/com/cook_and_share/presentation/ui/screens/auth/sign_up/sign_up/SignUpViewModel.kt
rename to app/src/main/java/com/cook_and_share/presentation/ui/screens/get_started/sign_up/SignUpViewModel.kt
--- a/app/src/main/java/com/cook_and_share/presentation/ui/screens/auth/sign_up/sign_up/SignUpViewModel.kt	(revision 4f008986f0d020bad036d3573cb47eec8e2c99ec)
+++ b/app/src/main/java/com/cook_and_share/presentation/ui/screens/get_started/sign_up/SignUpViewModel.kt	(date 1713662229178)
@@ -1,4 +1,4 @@
-package com.cook_and_share.presentation.ui.screens.auth.sign_up.sign_up
+package com.cook_and_share.presentation.ui.screens.get_started.sign_up
 
 import androidx.compose.runtime.mutableStateOf
 import androidx.lifecycle.SavedStateHandle
@@ -6,11 +6,11 @@
 import com.cook_and_share.domain.model.Profile
 import com.cook_and_share.domain.repository.AuthRepository
 import com.cook_and_share.domain.repository.LogRepository
+import com.cook_and_share.presentation.navigation.NavGraphs
 import com.cook_and_share.presentation.ui.components.snackbar.SnackbarManager
 import com.cook_and_share.presentation.ui.screens.CookAndShareViewModel
 import com.cook_and_share.presentation.util.Constants
-import com.cook_and_share.presentation.util.NavGraphs
-import com.cook_and_share.presentation.util.Screens
+import com.cook_and_share.presentation.util.GetStarted
 import com.cook_and_share.presentation.util.idFromParameter
 import com.cook_and_share.presentation.util.isValidEmail
 import com.cook_and_share.presentation.util.isValidPassword
@@ -91,12 +91,12 @@
             )
             val updatedProfile = profile.value
             authRepository.saveProfile(updatedProfile)
-            openAndPopUp(NavGraphs.Main.route, Screens.SignUpScreen.route)
+            openAndPopUp(NavGraphs.Main.route, GetStarted.SignUpScreen.route)
         }
     }
 
     fun onLoginClick(openAndPopUp: (String, String) -> Unit) {
-        openAndPopUp(Screens.LoginScreen.route, Screens.SignUpScreen.route)
+        openAndPopUp(NavGraphs.Login.route, GetStarted.SignUpScreen.route)
     }
 
 }
\ No newline at end of file
Index: app/build.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    id(\"com.android.application\")\r\n    id(\"org.jetbrains.kotlin.android\")\r\n    id(\"com.google.gms.google-services\")\r\n    id(\"kotlin-kapt\")\r\n    id(\"dagger.hilt.android.plugin\")\r\n    id(\"com.google.firebase.crashlytics\")\r\n    id(\"com.google.firebase.firebase-perf\")\r\n}\r\n\r\nandroid {\r\n    namespace = \"com.cook_and_share\"\r\n    compileSdk = 34\r\n\r\n    defaultConfig {\r\n        applicationId = \"com.cook_and_share\"\r\n        minSdk = 24\r\n        targetSdk = 34\r\n        versionCode = 1\r\n        versionName = \"1.0\"\r\n\r\n        testInstrumentationRunner = \"androidx.test.runner.AndroidJUnitRunner\"\r\n        vectorDrawables {\r\n            useSupportLibrary = true\r\n        }\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            isMinifyEnabled = false\r\n            proguardFiles(getDefaultProguardFile(\"proguard-android-optimize.txt\"), \"proguard-rules.pro\")\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility = JavaVersion.VERSION_1_8\r\n        targetCompatibility = JavaVersion.VERSION_1_8\r\n    }\r\n    kotlinOptions {\r\n        jvmTarget = \"1.8\"\r\n    }\r\n    buildFeatures {\r\n        compose = true\r\n        buildConfig = true\r\n    }\r\n    composeOptions {\r\n        kotlinCompilerExtensionVersion = \"1.5.1\"\r\n    }\r\n    packaging {\r\n        resources {\r\n            excludes += \"/META-INF/{AL2.0,LGPL2.1}\"\r\n        }\r\n    }\r\n}\r\n\r\ndependencies {\r\n    //Coroutines\r\n    implementation(\"org.jetbrains.kotlinx:kotlinx-coroutines-core:1.8.0\")\r\n    implementation(\"org.jetbrains.kotlinx:kotlinx-coroutines-android:1.8.0\")\r\n\r\n    //Compose dependencies\r\n    implementation(\"androidx.navigation:navigation-compose:2.7.7\")\r\n    implementation(\"androidx.lifecycle:lifecycle-runtime-compose:2.7.0\")\r\n    implementation(\"androidx.lifecycle:lifecycle-viewmodel-compose:2.7.0\")\r\n\r\n    //Dagger-Hilt\r\n    implementation(\"com.google.dagger:hilt-android:2.51\")\r\n    kapt(\"com.google.dagger:hilt-compiler:2.51\")\r\n    kapt(\"androidx.hilt:hilt-compiler:1.2.0\")\r\n    implementation(\"androidx.fragment:fragment-ktx:1.6.2\")\r\n\r\n    //Firebase\r\n    implementation(\"com.google.firebase:firebase-auth-ktx\")\r\n    implementation (\"com.google.firebase:firebase-firestore-ktx\")\r\n    implementation(platform(\"com.google.firebase:firebase-bom:32.8.1\"))\r\n    implementation (\"com.google.firebase:firebase-crashlytics-ktx\")\r\n    implementation (\"com.google.firebase:firebase-perf-ktx\")\r\n    implementation (\"com.google.firebase:firebase-config-ktx\")\r\n    implementation (\"com.google.firebase:firebase-analytics-ktx\")\r\n\r\n    //IDK\r\n    implementation(\"androidx.compose.material:material-icons-extended\")\r\n    implementation(\"androidx.hilt:hilt-navigation-compose:1.2.0\")\r\n    implementation(\"io.coil-kt:coil-compose:2.6.0\")\r\n    implementation(\"org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.8.0\")\r\n\r\n    //Translation\r\n    implementation (\"com.google.mlkit:translate:17.0.2\")\r\n    implementation (\"com.google.mlkit:language-id:17.0.5\")\r\n\r\n    //Other\r\n    implementation(\"androidx.core:core-ktx:1.13.0\")\r\n    implementation(\"androidx.lifecycle:lifecycle-runtime-ktx:2.7.0\")\r\n    implementation(\"androidx.activity:activity-compose:1.9.0\")\r\n    implementation(platform(\"androidx.compose:compose-bom:2024.04.01\"))\r\n    implementation(\"androidx.compose.ui:ui\")\r\n    implementation(\"androidx.compose.ui:ui-graphics\")\r\n    implementation(\"androidx.compose.ui:ui-tooling-preview\")\r\n    implementation(\"androidx.compose.material3:material3\")\r\n    implementation(\"com.google.android.gms:play-services-auth:21.1.0\")\r\n    testImplementation(\"junit:junit:4.13.2\")\r\n    androidTestImplementation(\"androidx.test.ext:junit:1.1.5\")\r\n    androidTestImplementation(\"androidx.test.espresso:espresso-core:3.5.1\")\r\n    androidTestImplementation(platform(\"androidx.compose:compose-bom:2024.04.01\"))\r\n    androidTestImplementation(\"androidx.compose.ui:ui-test-junit4\")\r\n    debugImplementation(\"androidx.compose.ui:ui-tooling\")\r\n    debugImplementation(\"androidx.compose.ui:ui-test-manifest\")\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle.kts b/app/build.gradle.kts
--- a/app/build.gradle.kts	(revision 4f008986f0d020bad036d3573cb47eec8e2c99ec)
+++ b/app/build.gradle.kts	(date 1713662930148)
@@ -59,7 +59,6 @@
 
     //Compose dependencies
     implementation("androidx.navigation:navigation-compose:2.7.7")
-    implementation("androidx.lifecycle:lifecycle-runtime-compose:2.7.0")
     implementation("androidx.lifecycle:lifecycle-viewmodel-compose:2.7.0")
 
     //Dagger-Hilt
Index: app/src/main/java/com/cook_and_share/presentation/ui/screens/main/navigation/MainNavHost.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/cook_and_share/presentation/ui/screens/main/navigation/MainNavHost.kt b/app/src/main/java/com/cook_and_share/presentation/ui/screens/main/navigation/MainNavHost.kt
new file mode 100644
--- /dev/null	(date 1713659308733)
+++ b/app/src/main/java/com/cook_and_share/presentation/ui/screens/main/navigation/MainNavHost.kt	(date 1713659308733)
@@ -0,0 +1,22 @@
+package com.cook_and_share.presentation.ui.screens.main.navigation
+
+import androidx.compose.runtime.Composable
+import androidx.navigation.compose.NavHost
+import androidx.navigation.compose.rememberNavController
+import com.cook_and_share.presentation.CookAndShareState
+import com.cook_and_share.presentation.navigation.NavGraphs
+
+@Composable
+fun MainNavHost(
+    appState: CookAndShareState
+) {
+    val navController = rememberNavController()
+    NavHost(
+        navController = navController,
+        startDestination = NavGraphs.Main.route
+    ) {
+        mainGraph(
+            appState = appState
+        )
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/cook_and_share/presentation/ui/screens/auth/sign_up/get_started/fragments/AllergiesFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/cook_and_share/presentation/ui/screens/auth/sign_up/get_started/fragments/AllergiesFragment.kt b/app/src/main/java/com/cook_and_share/presentation/ui/screens/get_started/get_started/AllergiesFragment.kt
rename from app/src/main/java/com/cook_and_share/presentation/ui/screens/auth/sign_up/get_started/fragments/AllergiesFragment.kt
rename to app/src/main/java/com/cook_and_share/presentation/ui/screens/get_started/get_started/AllergiesFragment.kt
--- a/app/src/main/java/com/cook_and_share/presentation/ui/screens/auth/sign_up/get_started/fragments/AllergiesFragment.kt	(revision 4f008986f0d020bad036d3573cb47eec8e2c99ec)
+++ b/app/src/main/java/com/cook_and_share/presentation/ui/screens/get_started/get_started/AllergiesFragment.kt	(date 1713641900193)
@@ -1,4 +1,4 @@
-package com.cook_and_share.presentation.ui.screens.auth.sign_up.get_started.fragments
+package com.cook_and_share.presentation.ui.screens.get_started.get_started
 
 import androidx.compose.runtime.Composable
 
Index: app/src/main/java/com/cook_and_share/presentation/ui/screens/auth/sign_up/get_started/fragments/DislikesFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/cook_and_share/presentation/ui/screens/auth/sign_up/get_started/fragments/DislikesFragment.kt b/app/src/main/java/com/cook_and_share/presentation/ui/screens/get_started/get_started/DislikesFragment.kt
rename from app/src/main/java/com/cook_and_share/presentation/ui/screens/auth/sign_up/get_started/fragments/DislikesFragment.kt
rename to app/src/main/java/com/cook_and_share/presentation/ui/screens/get_started/get_started/DislikesFragment.kt
--- a/app/src/main/java/com/cook_and_share/presentation/ui/screens/auth/sign_up/get_started/fragments/DislikesFragment.kt	(revision 4f008986f0d020bad036d3573cb47eec8e2c99ec)
+++ b/app/src/main/java/com/cook_and_share/presentation/ui/screens/get_started/get_started/DislikesFragment.kt	(date 1713641900212)
@@ -1,4 +1,4 @@
-package com.cook_and_share.presentation.ui.screens.auth.sign_up.get_started.fragments
+package com.cook_and_share.presentation.ui.screens.get_started.get_started
 
 import androidx.compose.runtime.Composable
 
Index: app/src/main/java/com/cook_and_share/presentation/ui/screens/get_started/get_started/PreferencesFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/cook_and_share/presentation/ui/screens/get_started/get_started/PreferencesFragment.kt b/app/src/main/java/com/cook_and_share/presentation/ui/screens/get_started/get_started/PreferencesFragment.kt
new file mode 100644
--- /dev/null	(date 1713641900283)
+++ b/app/src/main/java/com/cook_and_share/presentation/ui/screens/get_started/get_started/PreferencesFragment.kt	(date 1713641900283)
@@ -0,0 +1,32 @@
+package com.cook_and_share.presentation.ui.screens.get_started.get_started
+
+import androidx.compose.foundation.layout.Column
+import androidx.compose.foundation.layout.fillMaxSize
+import androidx.compose.foundation.layout.fillMaxWidth
+import androidx.compose.foundation.layout.height
+import androidx.compose.foundation.layout.padding
+import androidx.compose.runtime.Composable
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.unit.dp
+import com.cook_and_share.R
+import com.cook_and_share.presentation.ui.components.SecondaryButton
+
+@Composable
+fun PreferencesFragment() {
+
+    PreferencesFragmentContent()
+}
+
+@Composable
+private fun PreferencesFragmentContent() {
+    Column (modifier = Modifier.fillMaxSize()){
+        SecondaryButton(
+            modifier = Modifier
+                .padding(horizontal = 80.dp)
+                .height(65.dp)
+                .fillMaxWidth(),
+            label = R.string.continue_text,
+            onClick = {}
+        )
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/cook_and_share/presentation/ui/components/BottomBar.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.cook_and_share.presentation.ui.components\r\n\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.material3.Badge\r\nimport androidx.compose.material3.BadgedBox\r\nimport androidx.compose.material3.Icon\r\nimport androidx.compose.material3.MaterialTheme\r\nimport androidx.compose.material3.NavigationBar\r\nimport androidx.compose.material3.NavigationBarItem\r\nimport androidx.compose.material3.NavigationBarItemDefaults\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.getValue\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.draw.shadow\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.navigation.NavDestination.Companion.hierarchy\r\nimport androidx.navigation.NavGraph.Companion.findStartDestination\r\nimport androidx.navigation.NavHostController\r\nimport androidx.navigation.compose.currentBackStackEntryAsState\r\nimport com.cook_and_share.presentation.util.Screens\r\n\r\n@Composable\r\nfun BottomBar(\r\n    navController: NavHostController\r\n) {\r\n    NavigationBar(\r\n        modifier = Modifier.shadow(elevation = 3.dp),\r\n        containerColor = MaterialTheme.colorScheme.secondary\r\n    ) {\r\n        val navBackStackEntry by navController.currentBackStackEntryAsState()\r\n        val currentDestination = navBackStackEntry?.destination\r\n\r\n        getBottomNavigationItems().forEachIndexed { _, item ->\r\n            NavigationBarItem(\r\n                selected = currentDestination?.hierarchy?.any {\r\n                    if (\r\n                        it.route == Screens.AddRecipeScreen.route ||\r\n                        it.route == Screens.IngredientsScreen.route ||\r\n                        it.route == Screens.CategoriesScreen.route\r\n                    ) {\r\n                        Screens.AddRecipeScreen.route == item.route\r\n                    } else it.route == item.route\r\n                } == true,\r\n                onClick = {\r\n                    navController.navigate(item.route) {\r\n                        popUpTo(navController.graph.findStartDestination().id) {\r\n                            saveState = true\r\n                        }\r\n                        launchSingleTop = true\r\n                        restoreState = true\r\n                    }\r\n                },\r\n                label = { Text(text = item.title) },\r\n                colors = NavigationBarItemDefaults.colors(\r\n                    selectedIconColor = MaterialTheme.colorScheme.secondary,\r\n                    selectedTextColor = MaterialTheme.colorScheme.onSecondary,\r\n                    unselectedIconColor = MaterialTheme.colorScheme.onSecondary,\r\n                    unselectedTextColor = MaterialTheme.colorScheme.onSecondary,\r\n                    indicatorColor = MaterialTheme.colorScheme.onSecondary\r\n                ),\r\n                icon = {\r\n                    BadgedBox(\r\n                        badge = {\r\n                            if (item.badgeCount != null) {\r\n                                Badge(\r\n                                    containerColor = MaterialTheme.colorScheme.inversePrimary,\r\n                                    contentColor = MaterialTheme.colorScheme.primary\r\n                                ) {\r\n                                    Text(text = item.badgeCount.toString())\r\n                                }\r\n                            } else if (item.hasNews) {\r\n                                Badge(containerColor = MaterialTheme.colorScheme.inversePrimary)\r\n                            }\r\n                        }\r\n                    ) {\r\n                        Icon(\r\n                            imageVector = if (currentDestination?.hierarchy?.any { it.route == item.route } == true)\r\n                                item.selectedIcon\r\n                            else item.unselectedIcon,\r\n                            contentDescription = item.title,\r\n                            modifier = Modifier.size(30.dp)\r\n                        )\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/cook_and_share/presentation/ui/components/BottomBar.kt b/app/src/main/java/com/cook_and_share/presentation/ui/components/BottomBar.kt
--- a/app/src/main/java/com/cook_and_share/presentation/ui/components/BottomBar.kt	(revision 4f008986f0d020bad036d3573cb47eec8e2c99ec)
+++ b/app/src/main/java/com/cook_and_share/presentation/ui/components/BottomBar.kt	(date 1713659172800)
@@ -18,7 +18,7 @@
 import androidx.navigation.NavGraph.Companion.findStartDestination
 import androidx.navigation.NavHostController
 import androidx.navigation.compose.currentBackStackEntryAsState
-import com.cook_and_share.presentation.util.Screens
+import com.cook_and_share.presentation.util.Main
 
 @Composable
 fun BottomBar(
@@ -35,11 +35,11 @@
             NavigationBarItem(
                 selected = currentDestination?.hierarchy?.any {
                     if (
-                        it.route == Screens.AddRecipeScreen.route ||
-                        it.route == Screens.IngredientsScreen.route ||
-                        it.route == Screens.CategoriesScreen.route
+                        it.route == Main.AddRecipeScreen.route ||
+                        it.route == Main.IngredientsScreen.route ||
+                        it.route == Main.CategoriesScreen.route
                     ) {
-                        Screens.AddRecipeScreen.route == item.route
+                        Main.AddRecipeScreen.route == item.route
                     } else it.route == item.route
                 } == true,
                 onClick = {
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\r\n    <string name=\"web_client_id\" translatable=\"false\">AIzaSyBwDBp06krAvssnt8QgF5HITDG6vBDBNRM.apps.googleusercontent.com</string>\r\n    <string name=\"app_name\" translatable=\"false\">Cook&amp;Share</string>\r\n    <string name=\"app_name_caps\" translatable=\"false\">COOK&amp;SHARE</string>\r\n    <string name=\"email\">Email</string>\r\n    <string name=\"password\">Password</string>\r\n    <string name=\"forgot_password\">Forgot password?</string>\r\n    <string name=\"login\">Log in</string>\r\n    <string name=\"dont_have_account\">Don`t have an account?</string>\r\n    <string name=\"sign_up\">Sign Up</string>\r\n    <string name=\"login_with_google\">Continue with Google</string>\r\n    <string name=\"login_to_acc\">Login to Your Account</string>\r\n    <string name=\"sign_out\">Sign out</string>\r\n    <string name=\"have_account\">Already a member?</string>\r\n    <string name=\"sign_up_text\">Create a new account</string>\r\n    <string name=\"username\">Username</string>\r\n    <string name=\"confirm_password\">Confirm password</string>\r\n    <string name=\"home\">Home</string>\r\n    <string name=\"add\">Add</string>\r\n    <string name=\"search\">Search</string>\r\n    <string name=\"settings\">Settings</string>\r\n    <string name=\"profile\">Profile</string>\r\n    <string name=\"top_of_the_day\">Top of the day</string>\r\n    <string name=\"subscribed_recipes\">Subscribed recipes</string>\r\n    <string name=\"info\">Information</string>\r\n    <string name=\"username_error\">Enter username</string>\r\n    <string name=\"email_error\">Enter email</string>\r\n    <string name=\"password_error\">Your password should have at least six digits and include one digit, one lower case letter and one upper case letter</string>\r\n    <string name=\"password_match_error\">Password not match</string>\r\n    <string name=\"login_failed\">Login failed</string>\r\n    <string name=\"sign_up_failed\">Register failed</string>\r\n    <string name=\"recipe_name\">Recipe name</string>\r\n    <string name=\"ingredients\">Ingredients</string>\r\n    <string name=\"cooking_method\">Cooking method</string>\r\n    <string name=\"publish_recipe\">Publish recipe</string>\r\n    <string name=\"categories\">Categories</string>\r\n    <string name=\"preview\">Preview</string>\r\n    <string name=\"search_categories\">Enter category</string>\r\n    <string name=\"popular_categories\">Popular categories</string>\r\n    <string name=\"ingredient_name\">Ingredient name</string>\r\n    <string name=\"weight\">Weight</string>\r\n    <string name=\"add_ingredient\">Add ingredient</string>\r\n    <string name=\"recipes\">Recipes</string>\r\n    <string name=\"people\">People</string>\r\n    <string name=\"liked\">Liked</string>\r\n    <string name=\"email_letter_sent\">Email letter sent</string>\r\n    <string name=\"unknown_error\">Unknown error</string>\r\n    <string name=\"generic_error\">Generic Error</string>\r\n    <string name=\"try_again\">Try Again</string>\r\n    <string name=\"repeat_password\">Repeat password</string>\r\n    <string name=\"your_recipes\">Your recipes</string>\r\n    <string name=\"get_started\">Get started</string>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
--- a/app/src/main/res/values/strings.xml	(revision 4f008986f0d020bad036d3573cb47eec8e2c99ec)
+++ b/app/src/main/res/values/strings.xml	(date 1713490890072)
@@ -50,4 +50,5 @@
     <string name="repeat_password">Repeat password</string>
     <string name="your_recipes">Your recipes</string>
     <string name="get_started">Get started</string>
+    <string name="continue_text">Continue</string>
 </resources>
\ No newline at end of file
Index: app/src/main/java/com/cook_and_share/presentation/navigation/NavRoutes.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/cook_and_share/presentation/navigation/NavRoutes.kt b/app/src/main/java/com/cook_and_share/presentation/navigation/NavRoutes.kt
new file mode 100644
--- /dev/null	(date 1713642343424)
+++ b/app/src/main/java/com/cook_and_share/presentation/navigation/NavRoutes.kt	(date 1713642343424)
@@ -0,0 +1,8 @@
+package com.cook_and_share.presentation.navigation
+
+sealed class NavGraphs(val route: String){
+    data object SplashScreen : NavGraphs("splash_screen")
+    data object GetStarted : NavGraphs("get_started")
+    data object Main : NavGraphs("main")
+    data object Login : NavGraphs("login")
+}
\ No newline at end of file
Index: app/src/main/java/com/cook_and_share/presentation/ui/screens/splash/entry/EntryScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/cook_and_share/presentation/ui/screens/splash/entry/EntryScreen.kt b/app/src/main/java/com/cook_and_share/presentation/ui/screens/login/entry/EntryScreen.kt
rename from app/src/main/java/com/cook_and_share/presentation/ui/screens/splash/entry/EntryScreen.kt
rename to app/src/main/java/com/cook_and_share/presentation/ui/screens/login/entry/EntryScreen.kt
--- a/app/src/main/java/com/cook_and_share/presentation/ui/screens/splash/entry/EntryScreen.kt	(revision 4f008986f0d020bad036d3573cb47eec8e2c99ec)
+++ b/app/src/main/java/com/cook_and_share/presentation/ui/screens/login/entry/EntryScreen.kt	(date 1713657473959)
@@ -1,4 +1,4 @@
-package com.cook_and_share.presentation.ui.screens.splash.entry
+package com.cook_and_share.presentation.ui.screens.login.entry
 
 import androidx.compose.foundation.Image
 import androidx.compose.foundation.background
Index: app/src/main/java/com/cook_and_share/presentation/ui/screens/auth/login/LoginScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/cook_and_share/presentation/ui/screens/auth/login/LoginScreen.kt b/app/src/main/java/com/cook_and_share/presentation/ui/screens/login/login/LoginScreen.kt
rename from app/src/main/java/com/cook_and_share/presentation/ui/screens/auth/login/LoginScreen.kt
rename to app/src/main/java/com/cook_and_share/presentation/ui/screens/login/login/LoginScreen.kt
--- a/app/src/main/java/com/cook_and_share/presentation/ui/screens/auth/login/LoginScreen.kt	(revision 4f008986f0d020bad036d3573cb47eec8e2c99ec)
+++ b/app/src/main/java/com/cook_and_share/presentation/ui/screens/login/login/LoginScreen.kt	(date 1713641900230)
@@ -1,4 +1,4 @@
-package com.cook_and_share.presentation.ui.screens.auth.login
+package com.cook_and_share.presentation.ui.screens.login.login
 
 import androidx.compose.foundation.clickable
 import androidx.compose.foundation.layout.Arrangement
Index: app/src/main/java/com/cook_and_share/presentation/ui/screens/auth/login/LoginViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/cook_and_share/presentation/ui/screens/auth/login/LoginViewModel.kt b/app/src/main/java/com/cook_and_share/presentation/ui/screens/login/login/LoginViewModel.kt
rename from app/src/main/java/com/cook_and_share/presentation/ui/screens/auth/login/LoginViewModel.kt
rename to app/src/main/java/com/cook_and_share/presentation/ui/screens/login/login/LoginViewModel.kt
--- a/app/src/main/java/com/cook_and_share/presentation/ui/screens/auth/login/LoginViewModel.kt	(revision 4f008986f0d020bad036d3573cb47eec8e2c99ec)
+++ b/app/src/main/java/com/cook_and_share/presentation/ui/screens/login/login/LoginViewModel.kt	(date 1713662229167)
@@ -1,13 +1,13 @@
-package com.cook_and_share.presentation.ui.screens.auth.login
+package com.cook_and_share.presentation.ui.screens.login.login
 
 import androidx.compose.runtime.mutableStateOf
 import com.cook_and_share.R
 import com.cook_and_share.domain.repository.AuthRepository
 import com.cook_and_share.domain.repository.LogRepository
+import com.cook_and_share.presentation.navigation.NavGraphs
 import com.cook_and_share.presentation.ui.components.snackbar.SnackbarManager
 import com.cook_and_share.presentation.ui.screens.CookAndShareViewModel
-import com.cook_and_share.presentation.util.NavGraphs
-import com.cook_and_share.presentation.util.Screens
+import com.cook_and_share.presentation.util.Login
 import com.cook_and_share.presentation.util.isValidEmail
 import dagger.hilt.android.lifecycle.HiltViewModel
 import javax.inject.Inject
@@ -47,7 +47,7 @@
 
         launchCatching {
             authRepository.authenticate(email, password)
-            openAndPopUp(NavGraphs.Main.route, Screens.LoginScreen.route)
+            openAndPopUp(NavGraphs.Main.route, NavGraphs.Login.route)
         }
     }
 
@@ -64,6 +64,6 @@
     }
 
     fun onSignUpClick(openAndPopUp: (String, String) -> Unit) {
-        openAndPopUp(Screens.EntryScreen.route, Screens.LoginScreen.route)
+        openAndPopUp(Login.EntryScreen.route, NavGraphs.Login.route)
     }
 }
\ No newline at end of file
Index: app/src/main/java/com/cook_and_share/presentation/ui/screens/auth/ForgotPassScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/cook_and_share/presentation/ui/screens/auth/ForgotPassScreen.kt b/app/src/main/java/com/cook_and_share/presentation/ui/screens/login/ForgotPassScreen.kt
rename from app/src/main/java/com/cook_and_share/presentation/ui/screens/auth/ForgotPassScreen.kt
rename to app/src/main/java/com/cook_and_share/presentation/ui/screens/login/ForgotPassScreen.kt
--- a/app/src/main/java/com/cook_and_share/presentation/ui/screens/auth/ForgotPassScreen.kt	(revision 4f008986f0d020bad036d3573cb47eec8e2c99ec)
+++ b/app/src/main/java/com/cook_and_share/presentation/ui/screens/login/ForgotPassScreen.kt	(date 1713641900260)
@@ -1,4 +1,4 @@
-package com.cook_and_share.presentation.ui.screens.auth
+package com.cook_and_share.presentation.ui.screens.login
 
 import androidx.compose.runtime.Composable
 
Index: app/src/main/java/com/cook_and_share/presentation/ui/components/BottomNavigationMenu.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.cook_and_share.presentation.ui.components\r\n\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.filled.AccountCircle\r\nimport androidx.compose.material.icons.filled.Add\r\nimport androidx.compose.material.icons.filled.Home\r\nimport androidx.compose.material.icons.filled.Search\r\nimport androidx.compose.material.icons.outlined.AccountCircle\r\nimport androidx.compose.material.icons.outlined.Add\r\nimport androidx.compose.material.icons.outlined.Home\r\nimport androidx.compose.material.icons.outlined.Search\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.ui.graphics.vector.ImageVector\r\nimport androidx.compose.ui.res.stringResource\r\nimport com.cook_and_share.R\r\nimport com.cook_and_share.presentation.util.Screens\r\n\r\ndata class BottomNavigationItem(\r\n    val title: String,\r\n    val route: String,\r\n    val selectedIcon: ImageVector,\r\n    val unselectedIcon: ImageVector,\r\n    val hasNews: Boolean,\r\n    val badgeCount: Int? = null\r\n)\r\n\r\n@Composable\r\nfun getBottomNavigationItems(): List<BottomNavigationItem> {\r\n    return listOf(\r\n        BottomNavigationItem(\r\n            title = stringResource(id = R.string.home),\r\n            route = Screens.HomeScreen.route,\r\n            selectedIcon = Icons.Default.Home,\r\n            unselectedIcon = Icons.Outlined.Home,\r\n            hasNews = false\r\n        ),\r\n        BottomNavigationItem(\r\n            title = stringResource(id = R.string.add),\r\n            route = Screens.AddRecipeScreen.route,\r\n            selectedIcon = Icons.Default.Add,\r\n            unselectedIcon = Icons.Outlined.Add,\r\n            hasNews = false\r\n        ),\r\n        BottomNavigationItem(\r\n            title = stringResource(id = R.string.search),\r\n            route = Screens.SearchRecipeScreen.route,\r\n            selectedIcon = Icons.Default.Search,\r\n            unselectedIcon = Icons.Outlined.Search,\r\n            hasNews = false\r\n        ),\r\n        BottomNavigationItem(\r\n            title = stringResource(id = R.string.profile),\r\n            route = Screens.ProfileScreen.route,\r\n            selectedIcon = Icons.Default.AccountCircle,\r\n            unselectedIcon = Icons.Outlined.AccountCircle,\r\n            hasNews = false\r\n        ),\r\n    )\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/cook_and_share/presentation/ui/components/BottomNavigationMenu.kt b/app/src/main/java/com/cook_and_share/presentation/ui/components/BottomNavigationMenu.kt
--- a/app/src/main/java/com/cook_and_share/presentation/ui/components/BottomNavigationMenu.kt	(revision 4f008986f0d020bad036d3573cb47eec8e2c99ec)
+++ b/app/src/main/java/com/cook_and_share/presentation/ui/components/BottomNavigationMenu.kt	(date 1713659172818)
@@ -13,7 +13,7 @@
 import androidx.compose.ui.graphics.vector.ImageVector
 import androidx.compose.ui.res.stringResource
 import com.cook_and_share.R
-import com.cook_and_share.presentation.util.Screens
+import com.cook_and_share.presentation.util.Main
 
 data class BottomNavigationItem(
     val title: String,
@@ -29,28 +29,28 @@
     return listOf(
         BottomNavigationItem(
             title = stringResource(id = R.string.home),
-            route = Screens.HomeScreen.route,
+            route = Main.HomeScreen.route,
             selectedIcon = Icons.Default.Home,
             unselectedIcon = Icons.Outlined.Home,
             hasNews = false
         ),
         BottomNavigationItem(
             title = stringResource(id = R.string.add),
-            route = Screens.AddRecipeScreen.route,
+            route = Main.AddRecipeScreen.route,
             selectedIcon = Icons.Default.Add,
             unselectedIcon = Icons.Outlined.Add,
             hasNews = false
         ),
         BottomNavigationItem(
             title = stringResource(id = R.string.search),
-            route = Screens.SearchRecipeScreen.route,
+            route = Main.SearchRecipeScreen.route,
             selectedIcon = Icons.Default.Search,
             unselectedIcon = Icons.Outlined.Search,
             hasNews = false
         ),
         BottomNavigationItem(
             title = stringResource(id = R.string.profile),
-            route = Screens.ProfileScreen.route,
+            route = Main.ProfileScreen.route,
             selectedIcon = Icons.Default.AccountCircle,
             unselectedIcon = Icons.Outlined.AccountCircle,
             hasNews = false
Index: app/src/main/java/com/cook_and_share/presentation/ui/screens/get_started/navigation/GetStartedNavHost.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/cook_and_share/presentation/ui/screens/get_started/navigation/GetStartedNavHost.kt b/app/src/main/java/com/cook_and_share/presentation/ui/screens/get_started/navigation/GetStartedNavHost.kt
new file mode 100644
--- /dev/null	(date 1713666089920)
+++ b/app/src/main/java/com/cook_and_share/presentation/ui/screens/get_started/navigation/GetStartedNavHost.kt	(date 1713666089920)
@@ -0,0 +1,20 @@
+package com.cook_and_share.presentation.ui.screens.get_started.navigation
+
+import androidx.compose.runtime.Composable
+import androidx.navigation.compose.NavHost
+import androidx.navigation.compose.rememberNavController
+import com.cook_and_share.presentation.CookAndShareState
+import com.cook_and_share.presentation.util.GetStarted
+
+@Composable
+fun GetStartedNavHost(
+    appState: CookAndShareState
+) {
+    val navController = rememberNavController()
+    NavHost(
+        navController = navController,
+        startDestination = GetStarted.Preferences.route
+    ) {
+        getStartedGraph(appState)
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/cook_and_share/presentation/util/Routes.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.cook_and_share.presentation.util\r\n\r\nsealed class NavGraphs(val route: String){\r\n    data object CookAndShare : NavGraphs(\"cook_and_share\")\r\n    data object Main : NavGraphs(\"main\")\r\n    data object Auth : NavGraphs(\"auth\")\r\n}\r\nsealed class Screens(val route: String) {\r\n\r\n    //Activity navigation\r\n\r\n    data object SplashScreen : NavGraphs(\"splash_screen\")\r\n    data object EntryScreen : Screens(\"entry_screen\")\r\n    data object GetStarted : Screens(\"get_started\")\r\n    data object LoginScreen : Screens(\"login_screen\")\r\n    data object SignUpScreen : Screens(\"sign_up_screen\")\r\n    data object ForgotPassScreen : Screens(\"forgot_pass_screen\")\r\n\r\n    //Main navigation\r\n    data object HomeScreen : Screens(\"home_screen\")\r\n    data object AddRecipeScreen : Screens(\"add_recipe_screen\")\r\n    data object SearchRecipeScreen : Screens(\"search_recipe_screen\")\r\n    data object ProfileScreen : Screens(\"profile_screen\")\r\n    data object CategoriesScreen : Screens(\"categories_screen\")\r\n    data object IngredientsScreen : Screens(\"ingredients_screen\")\r\n\r\n    //Profile bottom sheet navigation\r\n    data object Settings : Screens(\"settings\")\r\n    data object Info : Screens(\"info\")\r\n    data object Liked : Screens(\"liked\")\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/cook_and_share/presentation/util/Routes.kt b/app/src/main/java/com/cook_and_share/presentation/util/Routes.kt
--- a/app/src/main/java/com/cook_and_share/presentation/util/Routes.kt	(revision 4f008986f0d020bad036d3573cb47eec8e2c99ec)
+++ b/app/src/main/java/com/cook_and_share/presentation/util/Routes.kt	(date 1713662229186)
@@ -1,32 +1,27 @@
 package com.cook_and_share.presentation.util
 
-sealed class NavGraphs(val route: String){
-    data object CookAndShare : NavGraphs("cook_and_share")
-    data object Main : NavGraphs("main")
-    data object Auth : NavGraphs("auth")
+sealed class GetStarted(val route: String) {
+    data object Allergies : GetStarted("allergies")
+    data object Dislikes : GetStarted("dislikes")
+    data object Preferences : GetStarted("preferences")
+    data object SignUpScreen : Login("sign_up_screen")
+}
+sealed class Login(val route: String) {
+    data object LoginScreen : GetStarted("login_screen")
+    data object EntryScreen : Login("entry_screen")
+    data object ForgotPassScreen : Login("forgot_pass_screen")
 }
-sealed class Screens(val route: String) {
-
-    //Activity navigation
-
-    data object SplashScreen : NavGraphs("splash_screen")
-    data object EntryScreen : Screens("entry_screen")
-    data object GetStarted : Screens("get_started")
-    data object LoginScreen : Screens("login_screen")
-    data object SignUpScreen : Screens("sign_up_screen")
-    data object ForgotPassScreen : Screens("forgot_pass_screen")
-
-    //Main navigation
-    data object HomeScreen : Screens("home_screen")
-    data object AddRecipeScreen : Screens("add_recipe_screen")
-    data object SearchRecipeScreen : Screens("search_recipe_screen")
-    data object ProfileScreen : Screens("profile_screen")
-    data object CategoriesScreen : Screens("categories_screen")
-    data object IngredientsScreen : Screens("ingredients_screen")
-
-    //Profile bottom sheet navigation
-    data object Settings : Screens("settings")
-    data object Info : Screens("info")
-    data object Liked : Screens("liked")
+sealed class Main(val route: String) {
+    data object HomeScreen : Main("home_screen")
+    data object AddRecipeScreen : Main("add_recipe_screen")
+    data object SearchRecipeScreen : Main("search_recipe_screen")
+    data object ProfileScreen : Main("profile_screen")
+    data object CategoriesScreen : Main("categories_screen")
+    data object IngredientsScreen : Main("ingredients_screen")
+}
+sealed class ProfileRoutes(val route: String) {
+    data object Settings : Main("settings")
+    data object Info : Main("info")
+    data object Liked : Main("liked")
 
 }
\ No newline at end of file
Index: app/src/main/java/com/cook_and_share/presentation/ui/screens/login/navigation/LoginNavGraph.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/cook_and_share/presentation/ui/screens/login/navigation/LoginNavGraph.kt b/app/src/main/java/com/cook_and_share/presentation/ui/screens/login/navigation/LoginNavGraph.kt
new file mode 100644
--- /dev/null	(date 1713658947458)
+++ b/app/src/main/java/com/cook_and_share/presentation/ui/screens/login/navigation/LoginNavGraph.kt	(date 1713658947458)
@@ -0,0 +1,26 @@
+package com.cook_and_share.presentation.ui.screens.login.navigation
+
+import androidx.navigation.NavGraphBuilder
+import com.cook_and_share.presentation.CookAndShareState
+import com.cook_and_share.presentation.navigation.customComposable
+import com.cook_and_share.presentation.ui.screens.login.ForgotPassScreen
+import com.cook_and_share.presentation.ui.screens.login.entry.EntryScreen
+import com.cook_and_share.presentation.ui.screens.login.login.LoginScreen
+import com.cook_and_share.presentation.util.Login
+
+fun NavGraphBuilder.loginGraph(appState: CookAndShareState) {
+    customComposable(Login.EntryScreen.route) {
+        EntryScreen(
+            navigate = { route -> appState.navigate(route) },
+            openAndPopUp = { route, popUp -> appState.navigateAndPopUp(route, popUp) }
+        )
+    }
+    customComposable(Login.LoginScreen.route) {
+        LoginScreen(
+            openAndPopUp = { route, popUp -> appState.navigateAndPopUp(route, popUp) }
+        )
+    }
+    customComposable(Login.ForgotPassScreen.route) {
+        ForgotPassScreen()
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/cook_and_share/presentation/ui/screens/main/MainNavGraph.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/cook_and_share/presentation/ui/screens/main/MainNavGraph.kt b/app/src/main/java/com/cook_and_share/presentation/ui/screens/main/navigation/MainNavGraph.kt
rename from app/src/main/java/com/cook_and_share/presentation/ui/screens/main/MainNavGraph.kt
rename to app/src/main/java/com/cook_and_share/presentation/ui/screens/main/navigation/MainNavGraph.kt
--- a/app/src/main/java/com/cook_and_share/presentation/ui/screens/main/MainNavGraph.kt	(revision 4f008986f0d020bad036d3573cb47eec8e2c99ec)
+++ b/app/src/main/java/com/cook_and_share/presentation/ui/screens/main/navigation/MainNavGraph.kt	(date 1713661319433)
@@ -1,8 +1,7 @@
-package com.cook_and_share.presentation.ui.screens.main
+package com.cook_and_share.presentation.ui.screens.main.navigation
 
 import androidx.navigation.NavGraphBuilder
 import androidx.navigation.compose.composable
-import androidx.navigation.navigation
 import com.cook_and_share.presentation.CookAndShareState
 import com.cook_and_share.presentation.ui.screens.main.add_recipe.add_recipe.AddRecipeScreen
 import com.cook_and_share.presentation.ui.screens.main.add_recipe.categories.CategoriesScreen
@@ -10,40 +9,36 @@
 import com.cook_and_share.presentation.ui.screens.main.home.HomeScreen
 import com.cook_and_share.presentation.ui.screens.main.profile.profile.ProfileScreen
 import com.cook_and_share.presentation.ui.screens.main.search.SearchScreen
-import com.cook_and_share.presentation.util.NavGraphs
-import com.cook_and_share.presentation.util.Screens
+import com.cook_and_share.presentation.util.Main
 
-fun NavGraphBuilder.mainGraph(appState: CookAndShareState) {
-    navigation(
-        route = NavGraphs.Main.route,
-        startDestination = Screens.HomeScreen.route
-    ) {
-        composable(Screens.HomeScreen.route) {
-            HomeScreen()
-        }
-        composable(Screens.AddRecipeScreen.route) {
-            AddRecipeScreen(
-                navigate = { route -> appState.navigate(route) },
-                popUp = { appState.popUp() },
-            )
-        }
-        composable(Screens.SearchRecipeScreen.route) {
-            SearchScreen()
-        }
-        composable(Screens.ProfileScreen.route) {
-            ProfileScreen(
-                navigate = { route -> appState.navigate(route) },
-            )
-        }
-        composable(Screens.CategoriesScreen.route) {
-            CategoriesScreen(
-                popUp = { appState.popUp() }
-            )
-        }
-        composable(Screens.IngredientsScreen.route) {
-            IngredientsScreen(
-                popUp = { appState.popUp() },
-            )
-        }
+fun NavGraphBuilder.mainGraph(
+    appState: CookAndShareState
+) {
+    composable(Main.HomeScreen.route) {
+        HomeScreen()
+    }
+    composable(Main.AddRecipeScreen.route) {
+        AddRecipeScreen(
+            navigate = { route -> appState.navigate(route) },
+            popUp = { appState.popUp() },
+        )
+    }
+    composable(Main.SearchRecipeScreen.route) {
+        SearchScreen()
+    }
+    composable(Main.ProfileScreen.route) {
+        ProfileScreen(
+            navigate = { route -> appState.navigate(route) },
+        )
+    }
+    composable(Main.CategoriesScreen.route) {
+        CategoriesScreen(
+            popUp = { appState.popUp() }
+        )
+    }
+    composable(Main.IngredientsScreen.route) {
+        IngredientsScreen(
+            popUp = { appState.popUp() },
+        )
     }
 }
\ No newline at end of file
Index: app/src/main/java/com/cook_and_share/presentation/ui/screens/get_started/navigation/GetStartedNavGraph.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/cook_and_share/presentation/ui/screens/get_started/navigation/GetStartedNavGraph.kt b/app/src/main/java/com/cook_and_share/presentation/ui/screens/get_started/navigation/GetStartedNavGraph.kt
new file mode 100644
--- /dev/null	(date 1713659172762)
+++ b/app/src/main/java/com/cook_and_share/presentation/ui/screens/get_started/navigation/GetStartedNavGraph.kt	(date 1713659172762)
@@ -0,0 +1,32 @@
+package com.cook_and_share.presentation.ui.screens.get_started.navigation
+
+import androidx.navigation.NavGraphBuilder
+import com.cook_and_share.presentation.CookAndShareState
+import com.cook_and_share.presentation.navigation.customComposable
+import com.cook_and_share.presentation.ui.screens.get_started.get_started.AllergiesFragment
+import com.cook_and_share.presentation.ui.screens.get_started.get_started.DislikesFragment
+import com.cook_and_share.presentation.ui.screens.get_started.get_started.PreferencesFragment
+import com.cook_and_share.presentation.ui.screens.get_started.sign_up.SignUpScreen
+import com.cook_and_share.presentation.util.GetStarted
+
+fun NavGraphBuilder.getStartedGraph(appState: CookAndShareState) {
+    customComposable(GetStarted.Preferences.route) {
+        PreferencesFragment(
+            // navigate = { route -> appState.navigate(route) },
+            // openAndPopUp = { route, popUp -> appState.navigateAndPopUp(route, popUp) }
+        )
+    }
+    customComposable(GetStarted.Allergies.route) {
+        AllergiesFragment(
+            //openAndPopUp = { route, popUp -> appState.navigateAndPopUp(route, popUp) }
+        )
+    }
+    customComposable(GetStarted.Dislikes.route) {
+        DislikesFragment()
+    }
+    customComposable(GetStarted.SignUpScreen.route){
+        SignUpScreen(
+            openAndPopUp = { route, popUp -> appState.navigateAndPopUp(route, popUp) }
+        )
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/cook_and_share/presentation/CookAndShareApp.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.cook_and_share.presentation\r\n\r\nimport android.annotation.SuppressLint\r\nimport android.content.res.Resources\r\nimport androidx.compose.foundation.shape.RoundedCornerShape\r\nimport androidx.compose.material3.MaterialTheme\r\nimport androidx.compose.material3.Scaffold\r\nimport androidx.compose.material3.Snackbar\r\nimport androidx.compose.material3.SnackbarHost\r\nimport androidx.compose.material3.SnackbarHostState\r\nimport androidx.compose.material3.Surface\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.ReadOnlyComposable\r\nimport androidx.compose.runtime.getValue\r\nimport androidx.compose.runtime.mutableStateOf\r\nimport androidx.compose.runtime.remember\r\nimport androidx.compose.runtime.rememberCoroutineScope\r\nimport androidx.compose.runtime.saveable.rememberSaveable\r\nimport androidx.compose.ui.platform.LocalConfiguration\r\nimport androidx.compose.ui.platform.LocalContext\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.navigation.NavHostController\r\nimport androidx.navigation.compose.NavHost\r\nimport androidx.navigation.compose.currentBackStackEntryAsState\r\nimport androidx.navigation.compose.rememberNavController\r\nimport com.cook_and_share.presentation.ui.components.BottomBar\r\nimport com.cook_and_share.presentation.ui.components.snackbar.SnackbarManager\r\nimport com.cook_and_share.presentation.ui.screens.auth.authGraph\r\nimport com.cook_and_share.presentation.ui.screens.main.mainGraph\r\nimport com.cook_and_share.presentation.ui.theme.CookAndShareTheme\r\nimport com.cook_and_share.presentation.util.NavGraphs\r\nimport com.cook_and_share.presentation.util.Screens\r\nimport kotlinx.coroutines.CoroutineScope\r\n\r\n@SuppressLint(\"UnusedMaterial3ScaffoldPaddingParameter\")\r\n@Composable\r\nfun CookAndShareApp() {\r\n    CookAndShareTheme {\r\n        Surface(color = MaterialTheme.colorScheme.background) {\r\n            val appState = rememberAppState()\r\n\r\n            val bottomBarState = rememberSaveable { (mutableStateOf(true)) }\r\n\r\n            val navBackStackEntry by appState.navController.currentBackStackEntryAsState()\r\n            val currentDestination = navBackStackEntry?.destination\r\n\r\n            when (currentDestination?.route){\r\n\r\n                Screens.HomeScreen.route -> {\r\n                    bottomBarState.value = true\r\n                }\r\n\r\n                Screens.AddRecipeScreen.route -> {\r\n                    bottomBarState.value = true\r\n                }\r\n\r\n                Screens.SearchRecipeScreen.route -> {\r\n                    bottomBarState.value = true\r\n                }\r\n\r\n                Screens.ProfileScreen.route -> {\r\n                    bottomBarState.value = true\r\n                }\r\n\r\n                Screens.CategoriesScreen.route -> {\r\n                    bottomBarState.value = true\r\n                }\r\n\r\n                Screens.IngredientsScreen.route -> {\r\n                    bottomBarState.value = true\r\n                }\r\n\r\n                else -> {\r\n                    bottomBarState.value = false\r\n                }\r\n            }\r\n\r\n            Scaffold(\r\n                bottomBar = {\r\n                    if (bottomBarState.value) {\r\n                        BottomBar(navController = appState.navController)\r\n                    }\r\n                },\r\n                snackbarHost = {\r\n                    SnackbarHost(\r\n                        hostState = appState.snackbarHostState,\r\n                        snackbar = { snackbarData ->\r\n                            Snackbar(\r\n                                shape = RoundedCornerShape(16.dp),\r\n                                snackbarData = snackbarData,\r\n                                containerColor = MaterialTheme.colorScheme.tertiary,\r\n                                contentColor = MaterialTheme.colorScheme.onTertiary\r\n                            )\r\n                        }\r\n                    )\r\n                }\r\n            ) {\r\n                NavHost(\r\n                    navController = appState.navController,\r\n                    startDestination = NavGraphs.CookAndShare.route\r\n                ) {\r\n                    cookAndShareGraph(appState)\r\n                    authGraph(appState)\r\n                    mainGraph(appState)\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@Composable\r\nfun rememberAppState(\r\n    snackbarHostState: SnackbarHostState = remember { SnackbarHostState() },\r\n    navController: NavHostController = rememberNavController(),\r\n    snackbarManager: SnackbarManager = SnackbarManager,\r\n    resources: Resources = resources(),\r\n    coroutineScope: CoroutineScope = rememberCoroutineScope()\r\n) =\r\n    remember(snackbarHostState, navController, snackbarManager, resources, coroutineScope) {\r\n        CookAndShareState(\r\n            snackbarHostState,\r\n            navController,\r\n            snackbarManager,\r\n            resources,\r\n            coroutineScope\r\n        )\r\n    }\r\n\r\n@Composable\r\n@ReadOnlyComposable\r\nfun resources(): Resources {\r\n    LocalConfiguration.current\r\n    return LocalContext.current.resources\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/cook_and_share/presentation/CookAndShareApp.kt b/app/src/main/java/com/cook_and_share/presentation/CookAndShareApp.kt
--- a/app/src/main/java/com/cook_and_share/presentation/CookAndShareApp.kt	(revision 4f008986f0d020bad036d3573cb47eec8e2c99ec)
+++ b/app/src/main/java/com/cook_and_share/presentation/CookAndShareApp.kt	(date 1713657474017)
@@ -11,25 +11,16 @@
 import androidx.compose.material3.Surface
 import androidx.compose.runtime.Composable
 import androidx.compose.runtime.ReadOnlyComposable
-import androidx.compose.runtime.getValue
-import androidx.compose.runtime.mutableStateOf
 import androidx.compose.runtime.remember
 import androidx.compose.runtime.rememberCoroutineScope
-import androidx.compose.runtime.saveable.rememberSaveable
 import androidx.compose.ui.platform.LocalConfiguration
 import androidx.compose.ui.platform.LocalContext
 import androidx.compose.ui.unit.dp
 import androidx.navigation.NavHostController
-import androidx.navigation.compose.NavHost
-import androidx.navigation.compose.currentBackStackEntryAsState
 import androidx.navigation.compose.rememberNavController
-import com.cook_and_share.presentation.ui.components.BottomBar
+import com.cook_and_share.presentation.navigation.CookAndShareNavHost
 import com.cook_and_share.presentation.ui.components.snackbar.SnackbarManager
-import com.cook_and_share.presentation.ui.screens.auth.authGraph
-import com.cook_and_share.presentation.ui.screens.main.mainGraph
 import com.cook_and_share.presentation.ui.theme.CookAndShareTheme
-import com.cook_and_share.presentation.util.NavGraphs
-import com.cook_and_share.presentation.util.Screens
 import kotlinx.coroutines.CoroutineScope
 
 @SuppressLint("UnusedMaterial3ScaffoldPaddingParameter")
@@ -39,48 +30,7 @@
         Surface(color = MaterialTheme.colorScheme.background) {
             val appState = rememberAppState()
 
-            val bottomBarState = rememberSaveable { (mutableStateOf(true)) }
-
-            val navBackStackEntry by appState.navController.currentBackStackEntryAsState()
-            val currentDestination = navBackStackEntry?.destination
-
-            when (currentDestination?.route){
-
-                Screens.HomeScreen.route -> {
-                    bottomBarState.value = true
-                }
-
-                Screens.AddRecipeScreen.route -> {
-                    bottomBarState.value = true
-                }
-
-                Screens.SearchRecipeScreen.route -> {
-                    bottomBarState.value = true
-                }
-
-                Screens.ProfileScreen.route -> {
-                    bottomBarState.value = true
-                }
-
-                Screens.CategoriesScreen.route -> {
-                    bottomBarState.value = true
-                }
-
-                Screens.IngredientsScreen.route -> {
-                    bottomBarState.value = true
-                }
-
-                else -> {
-                    bottomBarState.value = false
-                }
-            }
-
             Scaffold(
-                bottomBar = {
-                    if (bottomBarState.value) {
-                        BottomBar(navController = appState.navController)
-                    }
-                },
                 snackbarHost = {
                     SnackbarHost(
                         hostState = appState.snackbarHostState,
@@ -95,14 +45,7 @@
                     )
                 }
             ) {
-                NavHost(
-                    navController = appState.navController,
-                    startDestination = NavGraphs.CookAndShare.route
-                ) {
-                    cookAndShareGraph(appState)
-                    authGraph(appState)
-                    mainGraph(appState)
-                }
+                CookAndShareNavHost(appState)
             }
         }
     }
Index: app/src/main/java/com/cook_and_share/presentation/ui/screens/main/profile/settings/SettingsViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.cook_and_share.presentation.ui.screens.main.profile.settings\r\n\r\nimport com.cook_and_share.domain.repository.AuthRepository\r\nimport com.cook_and_share.domain.repository.LogRepository\r\nimport com.cook_and_share.presentation.ui.screens.CookAndShareViewModel\r\nimport com.cook_and_share.presentation.util.Screens\r\nimport dagger.hilt.android.lifecycle.HiltViewModel\r\nimport javax.inject.Inject\r\n\r\n@HiltViewModel\r\nclass SettingsViewModel @Inject constructor(\r\n    private val authRepository: AuthRepository,\r\n    logRepository: LogRepository\r\n) : CookAndShareViewModel(logRepository) {\r\n    fun onSignOutClick(restartApp: (String) -> Unit) {\r\n        launchCatching {\r\n            authRepository.signOut()\r\n            restartApp(Screens.SplashScreen.route)\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/cook_and_share/presentation/ui/screens/main/profile/settings/SettingsViewModel.kt b/app/src/main/java/com/cook_and_share/presentation/ui/screens/main/profile/settings/SettingsViewModel.kt
--- a/app/src/main/java/com/cook_and_share/presentation/ui/screens/main/profile/settings/SettingsViewModel.kt	(revision 4f008986f0d020bad036d3573cb47eec8e2c99ec)
+++ b/app/src/main/java/com/cook_and_share/presentation/ui/screens/main/profile/settings/SettingsViewModel.kt	(date 1713662281321)
@@ -2,8 +2,8 @@
 
 import com.cook_and_share.domain.repository.AuthRepository
 import com.cook_and_share.domain.repository.LogRepository
+import com.cook_and_share.presentation.navigation.NavGraphs
 import com.cook_and_share.presentation.ui.screens.CookAndShareViewModel
-import com.cook_and_share.presentation.util.Screens
 import dagger.hilt.android.lifecycle.HiltViewModel
 import javax.inject.Inject
 
@@ -15,7 +15,7 @@
     fun onSignOutClick(restartApp: (String) -> Unit) {
         launchCatching {
             authRepository.signOut()
-            restartApp(Screens.SplashScreen.route)
+            restartApp(NavGraphs.SplashScreen.route)
         }
     }
 }
\ No newline at end of file
Index: app/src/main/java/com/cook_and_share/presentation/ui/screens/main/add_recipe/AddRecipeViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.cook_and_share.presentation.ui.screens.main.add_recipe\r\n\r\nimport androidx.compose.runtime.mutableStateOf\r\nimport androidx.lifecycle.SavedStateHandle\r\nimport com.cook_and_share.domain.model.Recipe\r\nimport com.cook_and_share.domain.repository.LogRepository\r\nimport com.cook_and_share.domain.repository.StorageRepository\r\nimport com.cook_and_share.presentation.ui.screens.CookAndShareViewModel\r\nimport com.cook_and_share.presentation.util.Constants.RECIPE_ID\r\nimport com.cook_and_share.presentation.util.Screens\r\nimport com.cook_and_share.presentation.util.idFromParameter\r\nimport dagger.hilt.android.lifecycle.HiltViewModel\r\nimport javax.inject.Inject\r\n\r\n@HiltViewModel\r\nclass AddRecipeViewModel @Inject constructor(\r\n    savedStateHandle: SavedStateHandle,\r\n    logRepository: LogRepository,\r\n    private val storageRepository: StorageRepository,\r\n) : CookAndShareViewModel(logRepository) {\r\n\r\n    val recipe = mutableStateOf(Recipe())\r\n\r\n    init {\r\n        val recipeId = savedStateHandle.get<String>(RECIPE_ID)\r\n        if (recipeId != null) {\r\n            launchCatching {\r\n                recipe.value = storageRepository.getRecipe(recipeId.idFromParameter()) ?: Recipe()\r\n            }\r\n        }\r\n    }\r\n\r\n    fun onTitleChange(newValue: String) {\r\n        recipe.value = recipe.value.copy(title = newValue)\r\n    }\r\n\r\n    fun onUrlChange(newValue: String) {\r\n        recipe.value = recipe.value.copy(imageUrl = newValue)\r\n    }\r\n\r\n    fun onTagsChange(newValue: List<String>) {\r\n        recipe.value = recipe.value.copy(tags = newValue)\r\n    }\r\n\r\n    fun onIngredientsChange(newValue: List<Map<String, Int>>) {\r\n        recipe.value = recipe.value.copy(ingredients = newValue)\r\n    }\r\n\r\n    fun onRecipeChange(newValue: String) {\r\n        recipe.value = recipe.value.copy(recipe = newValue)\r\n    }\r\n\r\n    fun onPublishClick(popUpScreen: () -> Unit) {\r\n        launchCatching {\r\n            val editedTask = recipe.value\r\n            storageRepository.save(editedTask)\r\n            popUpScreen()\r\n        }\r\n    }\r\n    fun onIngredientsClick(navigate: (String) -> Unit) {\r\n        navigate(Screens.IngredientsScreen.route)\r\n    }\r\n\r\n    fun onCategoryClick(navigate: (String) -> Unit) {\r\n        navigate(Screens.CategoriesScreen.route)\r\n    }\r\n\r\n    fun onRecipeClick(navigate: (String) -> Unit) {\r\n       //TODO: navigate(Screens.RecipeScreen.route)\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/cook_and_share/presentation/ui/screens/main/add_recipe/AddRecipeViewModel.kt b/app/src/main/java/com/cook_and_share/presentation/ui/screens/main/add_recipe/AddRecipeViewModel.kt
--- a/app/src/main/java/com/cook_and_share/presentation/ui/screens/main/add_recipe/AddRecipeViewModel.kt	(revision 4f008986f0d020bad036d3573cb47eec8e2c99ec)
+++ b/app/src/main/java/com/cook_and_share/presentation/ui/screens/main/add_recipe/AddRecipeViewModel.kt	(date 1713659172769)
@@ -7,7 +7,7 @@
 import com.cook_and_share.domain.repository.StorageRepository
 import com.cook_and_share.presentation.ui.screens.CookAndShareViewModel
 import com.cook_and_share.presentation.util.Constants.RECIPE_ID
-import com.cook_and_share.presentation.util.Screens
+import com.cook_and_share.presentation.util.Main
 import com.cook_and_share.presentation.util.idFromParameter
 import dagger.hilt.android.lifecycle.HiltViewModel
 import javax.inject.Inject
@@ -58,11 +58,11 @@
         }
     }
     fun onIngredientsClick(navigate: (String) -> Unit) {
-        navigate(Screens.IngredientsScreen.route)
+        navigate(Main.IngredientsScreen.route)
     }
 
     fun onCategoryClick(navigate: (String) -> Unit) {
-        navigate(Screens.CategoriesScreen.route)
+        navigate(Main.CategoriesScreen.route)
     }
 
     fun onRecipeClick(navigate: (String) -> Unit) {
Index: app/src/main/java/com/cook_and_share/presentation/ui/screens/auth/sign_up/get_started/GetStartedScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/cook_and_share/presentation/ui/screens/auth/sign_up/get_started/GetStartedScreen.kt b/app/src/main/java/com/cook_and_share/presentation/ui/components/ProgressBar.kt
rename from app/src/main/java/com/cook_and_share/presentation/ui/screens/auth/sign_up/get_started/GetStartedScreen.kt
rename to app/src/main/java/com/cook_and_share/presentation/ui/components/ProgressBar.kt
--- a/app/src/main/java/com/cook_and_share/presentation/ui/screens/auth/sign_up/get_started/GetStartedScreen.kt	(revision 4f008986f0d020bad036d3573cb47eec8e2c99ec)
+++ b/app/src/main/java/com/cook_and_share/presentation/ui/components/ProgressBar.kt	(date 1713489961195)
@@ -1,97 +1,18 @@
-package com.cook_and_share.presentation.ui.screens.auth.sign_up.get_started
+package com.cook_and_share.presentation.ui.components
 
-import androidx.compose.foundation.background
 import androidx.compose.foundation.layout.Box
-import androidx.compose.foundation.layout.Column
-import androidx.compose.foundation.layout.Spacer
-import androidx.compose.foundation.layout.fillMaxSize
 import androidx.compose.foundation.layout.fillMaxWidth
 import androidx.compose.foundation.layout.padding
 import androidx.compose.foundation.shape.RoundedCornerShape
-import androidx.compose.material3.ExperimentalMaterial3Api
 import androidx.compose.material3.HorizontalDivider
-import androidx.compose.material3.MaterialTheme
 import androidx.compose.material3.MaterialTheme.colorScheme
-import androidx.compose.material3.Scaffold
-import androidx.compose.material3.Text
-import androidx.compose.material3.TopAppBarDefaults
-import androidx.compose.material3.TopAppBarScrollBehavior
 import androidx.compose.runtime.Composable
 import androidx.compose.ui.Modifier
 import androidx.compose.ui.draw.clip
-import androidx.compose.ui.input.nestedscroll.nestedScroll
-import androidx.compose.ui.text.style.TextAlign
 import androidx.compose.ui.unit.dp
-import com.cook_and_share.presentation.ui.components.TopAppBarBackIcon
-import com.cook_and_share.presentation.ui.components.TopBar
-
-@OptIn(ExperimentalMaterial3Api::class)
-@Composable
-fun GetStartedScreen(
-    popUp: () -> Unit,
-    openAndPopUp: (String, String) -> Unit
-) {
 
-    val scrollBehavior = TopAppBarDefaults.pinnedScrollBehavior()
-
-    GetStartedScreenContent(
-        popUp = popUp,
-        scrollBehavior = scrollBehavior
-    )
-}
-
-@OptIn(ExperimentalMaterial3Api::class)
 @Composable
-private fun GetStartedScreenContent(
-    popUp: () -> Unit,
-    scrollBehavior: TopAppBarScrollBehavior
-) {
-    Scaffold(
-        modifier = Modifier.nestedScroll(scrollBehavior.nestedScrollConnection),
-        topBar = {
-            TopBar(
-                title = {
-                  ProgressBar()
-                },
-                scrollBehavior = scrollBehavior,
-                iconButton = {
-                    TopAppBarBackIcon(popUp)
-                }
-            )
-        }
-    ) { values ->
-        Box(
-            modifier = Modifier
-                .padding(values)
-                .fillMaxSize()
-                .background(colorScheme.background)
-        ) {
-            NestedScrolling()
-        }
-    }
-}
-
-@Composable
-private fun NestedScrolling() {
-    Column(
-        modifier = Modifier
-            .fillMaxSize()
-            .padding(horizontal = 16.dp)
-    ) {
-
-        Spacer(modifier = Modifier.padding(top = 16.dp))
-
-        Text(
-            text = "Another text",
-            style = MaterialTheme.typography.titleLarge,
-            modifier = Modifier.fillMaxWidth(),
-            textAlign = TextAlign.Center,
-        )
-    }
-}
-
-@Composable
-private fun ProgressBar(){
+fun ProgressBar(){
     Box {
         HorizontalDivider(
             modifier = Modifier
Index: app/src/main/java/com/cook_and_share/presentation/ui/screens/main/profile/profile/ProfileViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.cook_and_share.presentation.ui.screens.main.profile.profile\r\n\r\nimport androidx.compose.runtime.mutableStateOf\r\nimport com.cook_and_share.domain.model.Profile\r\nimport com.cook_and_share.domain.model.Recipe\r\nimport com.cook_and_share.domain.repository.AuthRepository\r\nimport com.cook_and_share.domain.repository.LogRepository\r\nimport com.cook_and_share.domain.repository.StorageRepository\r\nimport com.cook_and_share.presentation.ui.screens.CookAndShareViewModel\r\nimport com.cook_and_share.presentation.util.Screens\r\nimport dagger.hilt.android.lifecycle.HiltViewModel\r\nimport javax.inject.Inject\r\n\r\n@HiltViewModel\r\nclass ProfileViewModel @Inject constructor(\r\n    private val authRepository: AuthRepository,\r\n    private val storageRepository: StorageRepository,\r\n    logRepository: LogRepository\r\n) : CookAndShareViewModel(logRepository) {\r\n\r\n    val profile = mutableStateOf(Profile())\r\n    val recipes = storageRepository.myRecipes\r\n\r\n    init {\r\n        launchCatching {\r\n            profile.value = authRepository.getProfile(authRepository.currentUserId) ?: Profile()\r\n        }\r\n    }\r\n\r\n    fun onRecipeLikeClick(recipe: Recipe) {\r\n        launchCatching {\r\n            storageRepository.update(recipe.copy(likes = recipe.likes + 1))\r\n        }\r\n    }\r\n\r\n    fun onSettingsClick(navigate: (String) -> Unit) {\r\n        navigate(Screens.Settings.route)\r\n    }\r\n\r\n    fun onLikedClick(navigate: (String) -> Unit) {\r\n        navigate(Screens.Liked.route)\r\n    }\r\n\r\n    fun onInfoClick(navigate: (String) -> Unit) {\r\n        navigate(Screens.Info.route)\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/cook_and_share/presentation/ui/screens/main/profile/profile/ProfileViewModel.kt b/app/src/main/java/com/cook_and_share/presentation/ui/screens/main/profile/profile/ProfileViewModel.kt
--- a/app/src/main/java/com/cook_and_share/presentation/ui/screens/main/profile/profile/ProfileViewModel.kt	(revision 4f008986f0d020bad036d3573cb47eec8e2c99ec)
+++ b/app/src/main/java/com/cook_and_share/presentation/ui/screens/main/profile/profile/ProfileViewModel.kt	(date 1713662229204)
@@ -7,7 +7,8 @@
 import com.cook_and_share.domain.repository.LogRepository
 import com.cook_and_share.domain.repository.StorageRepository
 import com.cook_and_share.presentation.ui.screens.CookAndShareViewModel
-import com.cook_and_share.presentation.util.Screens
+import com.cook_and_share.presentation.util.Main
+import com.cook_and_share.presentation.util.ProfileRoutes
 import dagger.hilt.android.lifecycle.HiltViewModel
 import javax.inject.Inject
 
@@ -34,14 +35,14 @@
     }
 
     fun onSettingsClick(navigate: (String) -> Unit) {
-        navigate(Screens.Settings.route)
+        navigate(ProfileRoutes.Settings.route)
     }
 
     fun onLikedClick(navigate: (String) -> Unit) {
-        navigate(Screens.Liked.route)
+        navigate(ProfileRoutes.Liked.route)
     }
 
     fun onInfoClick(navigate: (String) -> Unit) {
-        navigate(Screens.Info.route)
+        navigate(ProfileRoutes.Info.route)
     }
 }
\ No newline at end of file
Index: app/src/main/java/com/cook_and_share/presentation/ui/screens/main/MainScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/cook_and_share/presentation/ui/screens/main/MainScreen.kt b/app/src/main/java/com/cook_and_share/presentation/ui/screens/main/MainScreen.kt
new file mode 100644
--- /dev/null	(date 1713664183538)
+++ b/app/src/main/java/com/cook_and_share/presentation/ui/screens/main/MainScreen.kt	(date 1713664183538)
@@ -0,0 +1,109 @@
+package com.cook_and_share.presentation.ui.screens.main
+
+import android.annotation.SuppressLint
+import com.cook_and_share.presentation.CookAndShareState
+import com.cook_and_share.presentation.util.Main
+import androidx.compose.foundation.layout.size
+import androidx.compose.material3.Badge
+import androidx.compose.material3.BadgedBox
+import androidx.compose.material3.Icon
+import androidx.compose.material3.MaterialTheme
+import androidx.compose.material3.NavigationBar
+import androidx.compose.material3.NavigationBarItem
+import androidx.compose.material3.NavigationBarItemDefaults
+import androidx.compose.material3.Scaffold
+import androidx.compose.material3.Text
+import androidx.compose.runtime.Composable
+import androidx.compose.runtime.getValue
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.draw.shadow
+import androidx.compose.ui.unit.dp
+import androidx.navigation.NavController
+import androidx.navigation.NavDestination.Companion.hierarchy
+import androidx.navigation.NavGraph.Companion.findStartDestination
+import androidx.navigation.compose.currentBackStackEntryAsState
+import androidx.navigation.compose.rememberNavController
+import com.cook_and_share.presentation.ui.components.getBottomNavigationItems
+import com.cook_and_share.presentation.ui.screens.main.navigation.MainNavHost
+
+@SuppressLint("UnusedMaterial3ScaffoldPaddingParameter")
+@Composable
+fun MainScreen(
+    appState: CookAndShareState
+) {
+    val navController = rememberNavController()
+
+    Scaffold(
+        bottomBar = {
+            NavigationBar(navController)
+        }
+    ) {
+        MainNavHost(appState)
+    }
+}
+
+@Composable
+private fun NavigationBar(navController: NavController) {
+    NavigationBar(
+        modifier = Modifier.shadow(elevation = 3.dp),
+        containerColor = MaterialTheme.colorScheme.secondary
+    ) {
+        val navBackStackEntry by navController.currentBackStackEntryAsState()
+        val currentDestination = navBackStackEntry?.destination
+
+        getBottomNavigationItems().forEachIndexed { _, item ->
+            NavigationBarItem(
+                selected = currentDestination?.hierarchy?.any {
+                    if (
+                        it.route == Main.AddRecipeScreen.route ||
+                        it.route == Main.IngredientsScreen.route ||
+                        it.route == Main.CategoriesScreen.route
+                    ) {
+                        Main.AddRecipeScreen.route == item.route
+                    } else it.route == item.route
+                } == true,
+                onClick = {
+                    navController.navigate(item.route) {
+                        popUpTo(navController.graph.findStartDestination().id) {
+                            saveState = true
+                        }
+                        launchSingleTop = true
+                        restoreState = true
+                    }
+                },
+                label = { Text(text = item.title) },
+                colors = NavigationBarItemDefaults.colors(
+                    selectedIconColor = MaterialTheme.colorScheme.secondary,
+                    selectedTextColor = MaterialTheme.colorScheme.onSecondary,
+                    unselectedIconColor = MaterialTheme.colorScheme.onSecondary,
+                    unselectedTextColor = MaterialTheme.colorScheme.onSecondary,
+                    indicatorColor = MaterialTheme.colorScheme.onSecondary
+                ),
+                icon = {
+                    BadgedBox(
+                        badge = {
+                            if (item.badgeCount != null) {
+                                Badge(
+                                    containerColor = MaterialTheme.colorScheme.inversePrimary,
+                                    contentColor = MaterialTheme.colorScheme.primary
+                                ) {
+                                    Text(text = item.badgeCount.toString())
+                                }
+                            } else if (item.hasNews) {
+                                Badge(containerColor = MaterialTheme.colorScheme.inversePrimary)
+                            }
+                        }
+                    ) {
+                        Icon(
+                            imageVector = if (currentDestination?.hierarchy?.any { it.route == item.route } == true)
+                                item.selectedIcon
+                            else item.unselectedIcon,
+                            contentDescription = item.title,
+                            modifier = Modifier.size(30.dp)
+                        )
+                    }
+                }
+            )
+        }
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/cook_and_share/presentation/ui/screens/splash/splash/SplashScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/cook_and_share/presentation/ui/screens/splash/splash/SplashScreen.kt b/app/src/main/java/com/cook_and_share/presentation/ui/screens/splash/SplashScreen.kt
rename from app/src/main/java/com/cook_and_share/presentation/ui/screens/splash/splash/SplashScreen.kt
rename to app/src/main/java/com/cook_and_share/presentation/ui/screens/splash/SplashScreen.kt
--- a/app/src/main/java/com/cook_and_share/presentation/ui/screens/splash/splash/SplashScreen.kt	(revision 4f008986f0d020bad036d3573cb47eec8e2c99ec)
+++ b/app/src/main/java/com/cook_and_share/presentation/ui/screens/splash/SplashScreen.kt	(date 1713663836235)
@@ -1,4 +1,4 @@
-package com.cook_and_share.presentation.ui.screens.splash.splash
+package com.cook_and_share.presentation.ui.screens.splash
 
 import androidx.compose.foundation.background
 import androidx.compose.foundation.layout.Arrangement
Index: app/src/main/java/com/cook_and_share/presentation/ui/screens/login/navigation/LoginNavHost.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/cook_and_share/presentation/ui/screens/login/navigation/LoginNavHost.kt b/app/src/main/java/com/cook_and_share/presentation/ui/screens/login/navigation/LoginNavHost.kt
new file mode 100644
--- /dev/null	(date 1713665913622)
+++ b/app/src/main/java/com/cook_and_share/presentation/ui/screens/login/navigation/LoginNavHost.kt	(date 1713665913622)
@@ -0,0 +1,20 @@
+package com.cook_and_share.presentation.ui.screens.login.navigation
+
+import androidx.compose.runtime.Composable
+import androidx.navigation.compose.NavHost
+import androidx.navigation.compose.rememberNavController
+import com.cook_and_share.presentation.CookAndShareState
+import com.cook_and_share.presentation.util.Login
+
+@Composable
+fun LoginNavHost(
+    appState: CookAndShareState
+) {
+    val navController = rememberNavController()
+    NavHost(
+        navController = navController,
+        startDestination = Login.EntryScreen.route
+    ) {
+        loginGraph(appState)
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/cook_and_share/presentation/ui/screens/get_started/get_started/GetStarted.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/cook_and_share/presentation/ui/screens/get_started/get_started/GetStarted.kt b/app/src/main/java/com/cook_and_share/presentation/ui/screens/get_started/get_started/GetStarted.kt
new file mode 100644
--- /dev/null	(date 1713666371297)
+++ b/app/src/main/java/com/cook_and_share/presentation/ui/screens/get_started/get_started/GetStarted.kt	(date 1713666371297)
@@ -0,0 +1,23 @@
+package com.cook_and_share.presentation.ui.screens.get_started.get_started
+
+import android.annotation.SuppressLint
+import androidx.compose.material3.Scaffold
+import androidx.compose.runtime.Composable
+import com.cook_and_share.presentation.CookAndShareState
+import com.cook_and_share.presentation.ui.components.ProgressBar
+import com.cook_and_share.presentation.ui.screens.get_started.navigation.GetStartedNavHost
+
+@SuppressLint("UnusedMaterial3ScaffoldPaddingParameter")
+@Composable
+fun GetStartedScreen(
+    appState: CookAndShareState
+) {
+
+    Scaffold(
+        topBar = {
+            ProgressBar()
+        }
+    ) {
+        GetStartedNavHost(appState)
+    }
+}
Index: app/src/main/java/com/cook_and_share/presentation/navigation/NavHost.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/cook_and_share/presentation/navigation/NavHost.kt b/app/src/main/java/com/cook_and_share/presentation/navigation/NavHost.kt
new file mode 100644
--- /dev/null	(date 1713666371278)
+++ b/app/src/main/java/com/cook_and_share/presentation/navigation/NavHost.kt	(date 1713666371278)
@@ -0,0 +1,37 @@
+package com.cook_and_share.presentation.navigation
+
+import androidx.compose.runtime.Composable
+import androidx.navigation.compose.NavHost
+import com.cook_and_share.presentation.CookAndShareState
+import com.cook_and_share.presentation.ui.screens.get_started.get_started.GetStartedScreen
+import com.cook_and_share.presentation.ui.screens.login.navigation.LoginNavHost
+import com.cook_and_share.presentation.ui.screens.main.navigation.MainNavHost
+import com.cook_and_share.presentation.ui.screens.splash.SplashScreen
+
+@Composable
+fun CookAndShareNavHost(
+    appState: CookAndShareState
+) {
+    NavHost(
+        navController = appState.navController,
+        startDestination = NavGraphs.SplashScreen.route
+    ) {
+        customComposable(NavGraphs.Login.route) {
+            LoginNavHost(appState)
+        }
+
+        customComposable(NavGraphs.Main.route) {
+            MainNavHost(appState)
+        }
+
+       customComposable(NavGraphs.GetStarted.route){
+           GetStartedScreen(appState)
+       }
+
+        customComposable(NavGraphs.SplashScreen.route) {
+            SplashScreen(
+                openAndPopUp = { route, popUp -> appState.navigateAndPopUp(route, popUp) }
+            )
+        }
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/cook_and_share/presentation/navigation/NavGraphComposable.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/cook_and_share/presentation/navigation/NavGraphComposable.kt b/app/src/main/java/com/cook_and_share/presentation/navigation/NavGraphComposable.kt
new file mode 100644
--- /dev/null	(date 1713631988324)
+++ b/app/src/main/java/com/cook_and_share/presentation/navigation/NavGraphComposable.kt	(date 1713631988324)
@@ -0,0 +1,61 @@
+package com.cook_and_share.presentation.navigation
+
+import androidx.compose.animation.AnimatedContentScope
+import androidx.compose.animation.AnimatedContentTransitionScope
+import androidx.compose.animation.EnterTransition
+import androidx.compose.animation.ExitTransition
+import androidx.compose.animation.fadeIn
+import androidx.compose.animation.fadeOut
+import androidx.compose.animation.slideInHorizontally
+import androidx.compose.animation.slideOutHorizontally
+import androidx.compose.runtime.Composable
+import androidx.navigation.NamedNavArgument
+import androidx.navigation.NavBackStackEntry
+import androidx.navigation.NavDeepLink
+import androidx.navigation.NavGraphBuilder
+import androidx.navigation.compose.composable
+
+fun NavGraphBuilder.customComposable(
+    route: String,
+    arguments: List<NamedNavArgument> = emptyList(),
+    deepLinks: List<NavDeepLink> = emptyList(),
+    enterTransition: (AnimatedContentTransitionScope<NavBackStackEntry>.() -> EnterTransition?)? = enterTransition(),
+    exitTransition: (AnimatedContentTransitionScope<NavBackStackEntry>.() -> ExitTransition?)? = exitTransition(),
+    popEnterTransition: (AnimatedContentTransitionScope<NavBackStackEntry>.() -> EnterTransition?)? = popEnterTransition(),
+    popExitTransition: (AnimatedContentTransitionScope<NavBackStackEntry>.() -> ExitTransition?)? = popExitTransition(),
+    content: @Composable AnimatedContentScope.(NavBackStackEntry) -> Unit,
+) = composable(
+    route,
+    arguments,
+    deepLinks,
+    enterTransition,
+    exitTransition,
+    popEnterTransition,
+    popExitTransition,
+    content
+)
+
+
+private fun enterTransition(): (AnimatedContentTransitionScope<NavBackStackEntry>.() -> EnterTransition) =
+    {
+        //fadeIn(initialAlpha = 0.9f)
+        slideInHorizontally()
+    }
+
+private fun exitTransition(): (AnimatedContentTransitionScope<NavBackStackEntry>.() -> ExitTransition) =
+    {
+        //fadeOut(targetAlpha = 0.9f)
+        slideOutHorizontally()
+    }
+
+private fun popEnterTransition(): (AnimatedContentTransitionScope<NavBackStackEntry>.() -> EnterTransition) =
+    {
+        //fadeIn(initialAlpha = 0.9f)
+        slideInHorizontally()
+    }
+
+private fun popExitTransition(): (AnimatedContentTransitionScope<NavBackStackEntry>.() -> ExitTransition) =
+    {
+        //fadeOut(targetAlpha = 0.9f)
+        slideOutHorizontally()
+    }
\ No newline at end of file
